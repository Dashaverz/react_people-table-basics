{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PersonLink/PeopleLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","selectedSlug","map","isSlugSelected","cn","born","died","mother","motherName","father","fatherName","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","json","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useParams","handleGettingPeople","peopleFromServer","updatedPeople","find","useEffect","length","ErrorPage","Navigation","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9b79a508.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`../${person.slug}`}\n    className={() => (\n      classNames({\n        'has-text-danger': person.sex === 'f',\n      })\n    )}\n  >\n    {person.name}\n  </NavLink>\n);\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[]\n  selectedSlug: string\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => {\n        const isSlugSelected = person.slug === selectedSlug;\n\n        return (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn(\n              { 'has-background-warning': isSlugSelected },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : (person.motherName || '-')}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : (person.fatherName || '-')}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  await wait(500);\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { slug = '' } = useParams();\n\n  const handleGettingPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setIsError(false);\n\n      const updatedPeople = peopleFromServer.map(person => (\n        {\n          ...person,\n          mother: peopleFromServer\n            .find(mother => mother.name === person.motherName),\n          father: peopleFromServer\n            .find(father => father.name === person.fatherName),\n        }\n      ));\n\n      setPeople(updatedPeople);\n    } catch (error) {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    handleGettingPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {(isLoading && (<Loader />))}\n\n          {people.length === 0 && isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isError && !isLoading\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0\n          && (<PeopleTable people={people} selectedSlug={slug} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const ErrorPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { ErrorPage } from './components/ErrorPage';\nimport { Navigation } from './components/Navigation';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}